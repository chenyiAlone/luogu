/*

题目描述
某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：

院士奖学金，每人80008000元，期末平均成绩高于8080分（>80>80），并且在本学期内发表11篇或11篇以上论文的学生均可获得；
五四奖学金，每人40004000元，期末平均成绩高于8585分（>85>85），并且班级评议成绩高于8080分（>80>80）的学生均可获得；
成绩优秀奖，每人20002000元，期末平均成绩高于9090分（>90>90）的学生均可获得；
西部奖学金，每人10001000元，期末平均成绩高于8585分（>85>85）的西部省份学生均可获得；
班级贡献奖，每人850850元，班级评议成绩高于8080分（>80>80）的学生干部均可获得；
只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是8787分，班级评议成绩8282分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是48504850元。

现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。

输入输出格式
输入格式：
第一行是11个整数N(1 \le N \le 100)N(1≤N≤100)，表示学生的总数。

接下来的NN行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过2020的字符串（不含空格）；期末平均成绩和班级评议成绩都是00到100100之间的整数（包括00和100100）；是否是学生干部和是否是西部省份学生分别用11个字符表示，YY表示是，NN表示不是；发表的论文数是00到1010的整数（包括00和1010）。每两个相邻数据项之间用一个空格分隔。

输出格式：
包括33行。

第11行是获得最多奖金的学生的姓名。

第22行是这名学生获得的奖金总数。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。

第33行是这NN个学生获得的奖学金的总数。

输入输出样例
输入样例#1： 
4
YaoLin 87 82 Y N 0
ChenRuiyi 88 78 N Y 1
LiXin 92 88 N N 0
ZhangQin 83 87 Y N 1
输出样例#1： 
ChenRuiyi
9000
28700

思路:
    注意输入的数据...


*/
#include <iostream>
using namespace std;

int scholarship(int fs, int cs, bool is_cadre, bool is_west, int cnt) {
    int ret = 0;
    if (fs > 80 && cnt > 0)  ret += 8000;
    if (fs > 85 && cs > 80)  ret += 4000;
    if (fs > 90 )            ret += 2000;
    if (fs > 85 && is_west)  ret += 1000;
    if (cs > 80 && is_cadre) ret += 850;
    return ret;
}

int main() {
    int n;
    cin >> n;
    string name;
    int total = 0, maxSs = 0;
    for (int i = 0; i < n; i++) {
        string temp;
        char cadre, west;
        int fs, cs, cnt;
        cin >> temp >> fs >> cs >> cadre >> west >> cnt;
        int ss = scholarship(fs, cs, cadre == 'Y', west == 'Y', cnt);
        if (ss > maxSs) {
            name = temp;
            maxSs = ss;
        }
        total += ss;
    }
    cout << name << endl;
    cout << maxSs << endl;
    cout << total;
    return 0;
}