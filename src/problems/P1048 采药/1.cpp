/*

题目描述
辰辰是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。医师为了判断他的资质，给他出了一个难题。医师把他带到一个到处都是草药的山洞里对他说：“孩子，这个山洞里有一些不同的草药，采每一株都需要一些时间，每一株也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。”

如果你是辰辰，你能完成这个任务吗？

输入输出格式
输入格式：
第一行有22个整数T(1 \le T \le 1000)T(1≤T≤1000)和M(1 \le M \le 100)M(1≤M≤100)，用一个空格隔开，TT代表总共能够用来采药的时间，MM代表山洞里的草药的数目。
接下来的MM行每行包括两个在11到100100之间（包括11和100100）的整数，分别表示采摘某株草药的时间和这株草药的价值。

输出格式：
11个整数，表示在规定的时间内可以采到的草药的最大总价值。

输入输出样例
输入样例#1： 
70 3
71 100
69 1
1 2
输出样例#1： 
3
说明
对于30%的数据，M \le 10M≤10；

对于全部的数据，M \le 100M≤100。

NOIP2005普及组第三题

思路:
    01 背包问题



*/

#include <iostream>
using namespace std;
int f[101][1001], t, m;
pair<int, int> items[101];
int main() {
    cin >> t >> m;
    for (int i = 1; i <= m; i++) {
        cin >> items[i].first >> items[i].second;
    }
    for (int i = 1; i <= m; i++) {
        for (int j = 1; j <= t; j++) {
    //         cout << i << ' ' << j << endl;
            f[i][j] = f[i - 1][j];
            if (j >= items[i].first) {
                f[i][j] = max(f[i - 1][j], f[i - 1][j - items[i].first] + items[i].second);
            }
        }
    }
    // for (int i = 1; i <= m; i++) {
        
    //     for (int j = 1; j <= t; j++)
    //         cout << f[i][j] << ' ';
    //     cout << endl;    
    // }
    cout << f[m][t];
    return 0;
}