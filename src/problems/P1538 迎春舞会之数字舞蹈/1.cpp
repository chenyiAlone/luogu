/*

题目背景
HNSDFZ的同学们为了庆祝春节，准备排练一场舞会。

题目描述
在越来越讲究合作的时代，人们注意的更多的不是个人物的舞姿，而是集体的排列。

为了配合每年的倒计时，同学们决定排出——“数字舞蹈”。顾名思义就是所有人一起排成若干个数字 -\_\_\_-||||  更为创新的是，每个人都是趴在地上，保证横竖。
现在给出数字及其要求摆出的大小，请你编程，模拟同学们的优美姿态。

输入输出格式
输入格式：
第一行为k。k表示要摆出数字的大小。

第二行为全部由数字组成的字符串，即要摆出的几个数字。

输出格式：
按题目要求输出。

输入输出样例
输入样例#1： 
2
1234567890
输出样例#1： 
      --   --        --   --   --   --   --   -- 
   |    |    | |  | |    |       | |  | |  | |  |
   |    |    | |  | |    |       | |  | |  | |  |
      --   --   --   --   --        --   --      
   | |       |    |    | |  |    | |  |    | |  |
   | |       |    |    | |  |    | |  |    | |  |
      --   --        --   --        --   --   -- 
说明
除了第一个数字之外，每个数字之前有1个空格，所有数字全部对齐。

k<=30,s的长度不超过255

建议大家直接输出，不要保存。

如果对于大小和k有疑问，请自行理解。


     0
     -- 
  1 |  | 2
    |  |
    3--  
    |  |
  4 |  | 5
     -- 
	  6

*/

#include <iostream>
using namespace std;
                    // 0  1  2  3  4  5  6
                    // -  |  |  -  |  |  -
char nums[10][7] = { {'-', '|', '|', ' ', '|', '|', '-'},
                    {' ', ' ', '|', ' ', ' ', '|', ' '},
                    {'-', ' ', '|', '-', '|', ' ', '-'},
                    {'-', ' ', '|', '-', ' ', '|', '-'},
                    {' ', '|', '|', '-', ' ', '|', ' '},
                    {'-', '|', ' ', '-', ' ', '|', '-'},
                    {'-', '|', ' ', '-', '|', '|', '-'},
                    {'-', ' ', '|', ' ', ' ', '|', ' '},
                    {'-', '|', '|', '-', '|', '|', '-'},
                    {'-', '|', '|', '-', ' ', '|', '-'} };

int main() {
    int k;
    string s;
    cin >> k >> s;
    int len = s.size(), sel;
    for (int i = 0; i < 2 * k + 3; i++) {
        if      (i == 0)         sel = 0;
        else if (i < k + 1)      sel = 1;
        else if (i == k + 1)     sel = 3;
        else if (i < 2 * k + 2 ) sel = 4;
        else                     sel = 6;

        for (int j = 0; j < len; j++) {
            int n = s[j] - '0';
            if (sel == 0 || sel == 3 || sel == 6) {
                cout << ' ';
                for (int t = 0; t < k; t++)
                    cout << nums[n][sel];
                cout << ' ';
            } else {
                cout << nums[n][sel];
                for (int t = 0; t < k; t++)
                    cout << ' ';
                cout << nums[n][sel + 1];
            }
            cout << ((j == len - 1) ? '\n' : ' '); 
        }
    }
    return 0;
}