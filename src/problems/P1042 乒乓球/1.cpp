/*

题目背景
国际乒联现在主席沙拉拉自从上任以来就立志于推行一系列改革，以推动乒乓球运动在全球的普及。其中1111分制改革引起了很大的争议，有一部分球员因为无法适应新规则只能选择退役。华华就是其中一位，他退役之后走上了乒乓球研究工作，意图弄明白1111分制和2121分制对选手的不同影响。在开展他的研究之前，他首先需要对他多年比赛的统计数据进行一些分析，所以需要你的帮忙。

题目描述
华华通过以下方式进行分析，首先将比赛每个球的胜负列成一张表，然后分别计算在1111分制和2121分制下，双方的比赛结果（截至记录末尾）。

比如现在有这么一份记录，（其中W表示华华获得一分，L表示华华对手获得一分）：

WWWWWWWWWWWWWWWWWWWWWWLW

在1111分制下，此时比赛的结果是华华第一局1111比00获胜，第二局1111比00获胜，正在进行第三局，当前比分11比11。而在2121分制下，此时比赛结果是华华第一局2121比00获胜，正在进行第二局，比分22比11。如果一局比赛刚开始，则此时比分为00比00。直到分差大于或者等于22，才一局结束。

你的程序就是要对于一系列比赛信息的输入（WLWL形式），输出正确的结果。

输入输出格式
输入格式：
每个输入文件包含若干行字符串，字符串有大写的WW、LL和EE组成。其中EE表示比赛信息结束，程序应该忽略E之后的所有内容。

输出格式：
输出由两部分组成，每部分有若干行，每一行对应一局比赛的比分（按比赛信息输入顺序）。其中第一部分是1111分制下的结果，第二部分是2121分制下的结果，两部分之间由一个空行分隔。

输入输出样例
输入样例#1： 
WWWWWWWWWWWWWWWWWWWW
WWLWE
输出样例#1： 
11:0
11:0
1:1

21:0
2:1
说明
每行至多25个字母，最多有2500行

思路:

    1. 记得清零！
    2. cout << own << ':' << opp << endl << endl; 解决了为 0 的特殊情况


*/
#include <iostream>
using namespace std;
int main() {
    // string res11 = "", res21 = "";
    string str = "";
    char c;
    while (cin >> c && c != 'E') {
        str += c;
    }
    // cout << str << endl;
    int own = 0, opp = 0;
    int len = str.size();
    for (int i = 0; i < len; i++) {
        own += str[i] == 'W';
        opp += str[i] == 'L';
         if ((own >= 11 && opp + 2 <= own) || (opp >= 11 && own + 2 <= opp)) {
            cout << own << ':' << opp << endl;
            own = 0;    opp = 0;
        }
    }
    cout << own << ':' << opp << endl << endl;
    own = 0;    opp = 0;
    for (int i = 0; i < len; i++) {
        own += str[i] == 'W';
        opp += str[i] == 'L';
         if ((own >= 21 && opp + 2 <= own) || (opp >= 21 && own + 2 <= opp)) {
            cout << own << ':' << opp << endl;
            own = 0;  opp = 0;
        }
    }
    cout << own << ':' << opp << endl;
    return 0;
}
